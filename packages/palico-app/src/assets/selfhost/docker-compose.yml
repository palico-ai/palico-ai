version: '3.8'

services:
  database:
    image: 'postgres:15-alpine'
    restart: 'always'
    environment:
      - 'POSTGRES_USER=${DOCKER_COMPOSE_DATABASE_USERNAME}'
      - 'POSTGRES_PASSWORD=${DOCKER_COMPOSE_DATABASE_PASSWORD}'
      - 'POSTGRES_DB=${DOCKER_COMPOSE_DATABASE_NAME}'
    volumes:
      - /app/storage/data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DOCKER_COMPOSE_DATABASE_USERNAME}']
      interval: 5s
      timeout: 5s
      retries: 10
  studio:
    image: 'palicoai/studio:main'
    platform: 'linux/amd64'
    restart: 'always'
    environment:
      - 'PALICO_AGENT_API_URL=http://api:8000'
      - 'DEV_MODE=${DEV_MODE}'
      - JWT_SECRET=${DOCKER_COMPOSE_JWT_SECRET}
      - PALICO_SERVICE_KEY=${DOCKER_COMPOSE_SERVICE_KEY}
      - STUDIO_USERNAME=${DOCKER_COMPOSE_STUDIO_USERNAME}
      - STUDIO_PASSWORD=${DOCKER_COMPOSE_STUDIO_PASSWORD}
  api:
    depends_on:
      database:
        condition: service_healthy
    build: .
    restart: 'always'
    environment:
      - DATABASE_URL=postgres://${DOCKER_COMPOSE_DATABASE_USERNAME}:${DOCKER_COMPOSE_DATABASE_PASSWORD}@database:5432/${DOCKER_COMPOSE_DATABASE_NAME}
      - PUBLIC_API_PORT=8000
      - JWT_SECRET=${DOCKER_COMPOSE_JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
